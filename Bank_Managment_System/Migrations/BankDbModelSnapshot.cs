// <auto-generated />
using System;
using Bank_Managment_System.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bank_Managment_System.Migrations
{
    [DbContext(typeof(BankDb))]
    partial class BankDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bank_Managment_System.Models.Aunthification.ManagerAuthification", b =>
                {
                    b.Property<int>("ManagerAuthificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManagerAuthificationID"));

                    b.Property<int>("ManagerID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManagerAuthificationID");

                    b.HasIndex("ManagerID")
                        .IsUnique();

                    b.ToTable("ManagerAuthifications");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.Aunthification.OperatorAunthification", b =>
                {
                    b.Property<int>("OperatorAunthificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OperatorAunthificationID"));

                    b.Property<int>("OperatorID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OperatorAunthificationID");

                    b.HasIndex("OperatorID")
                        .IsUnique();

                    b.ToTable("OperatorAunthifications");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.Aunthification.UserAunthification", b =>
                {
                    b.Property<int>("UserAunthificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserAunthificationID"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserAunthificationID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("UserAunthifications");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.BankAccount", b =>
                {
                    b.Property<int>("BankAccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BankAccountID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountWithdrawed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Iban")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("LastWithdrawDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("Valute")
                        .HasColumnType("int");

                    b.Property<decimal>("totalwithdrawed")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BankAccountID");

                    b.HasIndex("UserID");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.Card", b =>
                {
                    b.Property<int>("cardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cardId"));

                    b.Property<string>("AuthorizedStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CVVCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PINcode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime>("Validatedate")
                        .HasColumnType("datetime2");

                    b.Property<int>("accountId")
                        .HasColumnType("int");

                    b.HasKey("cardId");

                    b.HasIndex("accountId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.Contact", b =>
                {
                    b.Property<int>("ContactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactID");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.CookieforOperator", b =>
                {
                    b.Property<int>("CookieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CookieID"));

                    b.Property<int>("OperatorID")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CookieID");

                    b.HasIndex("OperatorID")
                        .IsUnique();

                    b.ToTable("CookiesForOperators");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.CookieforUser", b =>
                {
                    b.Property<int>("cookieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cookieID"));

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cookieID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("CookieforUsers");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.Cookieformanager", b =>
                {
                    b.Property<int>("cookieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cookieID"));

                    b.Property<int>("managerID")
                        .HasColumnType("int");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cookieID");

                    b.HasIndex("managerID")
                        .IsUnique();

                    b.ToTable("Cookieformanagers");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.Manager", b =>
                {
                    b.Property<int>("managerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("managerID"));

                    b.Property<int>("ContactID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PN")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("managerID");

                    b.HasIndex("ContactID");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.Operator", b =>
                {
                    b.Property<int>("OperatorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OperatorID"));

                    b.Property<int>("ContactID")
                        .HasColumnType("int");

                    b.Property<int>("ManagerID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PN")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("OperatorID");

                    b.HasIndex("ContactID");

                    b.ToTable("Operators");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.SystemModels.Error", b =>
                {
                    b.Property<int>("ErrorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ErrorId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("TimeOfocured")
                        .HasColumnType("datetime2");

                    b.Property<int>("errortype")
                        .HasColumnType("int");

                    b.HasKey("ErrorId");

                    b.ToTable("Errors");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.SystemModels.Log", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("Acction")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("timeofocured")
                        .HasColumnType("datetime2");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("LogId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.SystemModels.ValuteCurse", b =>
                {
                    b.Property<int>("ValuteCursesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ValuteCursesID"));

                    b.Property<decimal>("EURO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GEL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("USD")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ValuteCursesID");

                    b.ToTable("ValuteCurses");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CardID")
                        .HasColumnType("int");

                    b.Property<string>("Reciever_Iban")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender_Iban")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Transaction_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Valute")
                        .HasColumnType("int");

                    b.HasKey("TransactionID");

                    b.HasIndex("CardID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ContactID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OperatorID")
                        .HasColumnType("int");

                    b.Property<string>("PN")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("Registration_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.HasIndex("ContactID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Bank_Managment_System.Models._2Fa._2StepAunt", b =>
                {
                    b.Property<int>("stepID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("stepID"));

                    b.Property<int>("OwnerID")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("stepID");

                    b.ToTable("2stepCodes");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.Aunthification.ManagerAuthification", b =>
                {
                    b.HasOne("Bank_Managment_System.Models.Manager", "manager")
                        .WithOne("authification")
                        .HasForeignKey("Bank_Managment_System.Models.Aunthification.ManagerAuthification", "ManagerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("manager");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.Aunthification.OperatorAunthification", b =>
                {
                    b.HasOne("Bank_Managment_System.Models.Operator", "operatori")
                        .WithOne("aunthification")
                        .HasForeignKey("Bank_Managment_System.Models.Aunthification.OperatorAunthification", "OperatorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("operatori");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.Aunthification.UserAunthification", b =>
                {
                    b.HasOne("Bank_Managment_System.Models.User", "user")
                        .WithOne("aunthification")
                        .HasForeignKey("Bank_Managment_System.Models.Aunthification.UserAunthification", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.BankAccount", b =>
                {
                    b.HasOne("Bank_Managment_System.Models.User", "user")
                        .WithMany("accounts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.Card", b =>
                {
                    b.HasOne("Bank_Managment_System.Models.BankAccount", "account")
                        .WithMany("card")
                        .HasForeignKey("accountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("account");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.CookieforOperator", b =>
                {
                    b.HasOne("Bank_Managment_System.Models.Operator", "operatori")
                        .WithOne("cookie")
                        .HasForeignKey("Bank_Managment_System.Models.CookieforOperator", "OperatorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("operatori");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.CookieforUser", b =>
                {
                    b.HasOne("Bank_Managment_System.Models.User", "users")
                        .WithOne("cook")
                        .HasForeignKey("Bank_Managment_System.Models.CookieforUser", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.Cookieformanager", b =>
                {
                    b.HasOne("Bank_Managment_System.Models.Manager", "managers")
                        .WithOne("cookie")
                        .HasForeignKey("Bank_Managment_System.Models.Cookieformanager", "managerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("managers");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.Manager", b =>
                {
                    b.HasOne("Bank_Managment_System.Models.Contact", "contact")
                        .WithMany("manager")
                        .HasForeignKey("ContactID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("contact");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.Operator", b =>
                {
                    b.HasOne("Bank_Managment_System.Models.Contact", "contact")
                        .WithMany("operatori")
                        .HasForeignKey("ContactID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("contact");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.Transaction", b =>
                {
                    b.HasOne("Bank_Managment_System.Models.Card", "cards")
                        .WithMany("transacts")
                        .HasForeignKey("CardID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cards");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.User", b =>
                {
                    b.HasOne("Bank_Managment_System.Models.Contact", "contact")
                        .WithMany("user")
                        .HasForeignKey("ContactID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("contact");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.BankAccount", b =>
                {
                    b.Navigation("card");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.Card", b =>
                {
                    b.Navigation("transacts");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.Contact", b =>
                {
                    b.Navigation("manager");

                    b.Navigation("operatori");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Bank_Managment_System.Models.Manager", b =>
                {
                    b.Navigation("authification")
                        .IsRequired();

                    b.Navigation("cookie")
                        .IsRequired();
                });

            modelBuilder.Entity("Bank_Managment_System.Models.Operator", b =>
                {
                    b.Navigation("aunthification")
                        .IsRequired();

                    b.Navigation("cookie")
                        .IsRequired();
                });

            modelBuilder.Entity("Bank_Managment_System.Models.User", b =>
                {
                    b.Navigation("accounts");

                    b.Navigation("aunthification")
                        .IsRequired();

                    b.Navigation("cook")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
